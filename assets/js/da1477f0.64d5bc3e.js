"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[13],{8762:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>n,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"utilities","title":"Complete list of utilities/variants","description":"Base utilities","source":"@site/docs/utilities.md","sourceDirName":".","slug":"/utilities","permalink":"/tailwind-scrollbar/utilities","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"docs","previous":{"title":"Examples","permalink":"/tailwind-scrollbar/examples"}}');var t=i(4848),l=i(8453);const n={sidebar_position:5},c="Complete list of utilities/variants",d={},a=[{value:"Base utilities",id:"base-utilities",level:2},{value:"Colour utilities",id:"colour-utilities",level:2},{value:"Nocompatible utilities",id:"nocompatible-utilities",level:2},{value:"Variants",id:"variants",level:2}];function o(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"complete-list-of-utilitiesvariants",children:"Complete list of utilities/variants"})}),"\n",(0,t.jsx)(s.h2,{id:"base-utilities",children:"Base utilities"}),"\n",(0,t.jsx)(s.p,{children:"These utilities initialize scrollbar styling. You always need one of them, even if you're using custom widths."}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Utility"}),(0,t.jsx)(s.th,{children:"Effect"}),(0,t.jsx)(s.th,{children:"Notes"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)("span",{className:"whitespace-nowrap",children:(0,t.jsx)(s.code,{children:"scrollbar"})})}),(0,t.jsx)(s.td,{children:"Enables custom scrollbar styling, using the default width"}),(0,t.jsxs)(s.td,{children:["On Firefox, this is ",(0,t.jsx)(s.code,{children:"scrollbar-width: auto"}),". Chrome is hard coded to ",(0,t.jsx)(s.code,{children:"16px"})," for consistency."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)("span",{className:"whitespace-nowrap",children:(0,t.jsx)(s.code,{children:"scrollbar-thin"})})}),(0,t.jsx)(s.td,{children:"Enables custom scrollbar styling, using the thin width"}),(0,t.jsxs)(s.td,{children:["On Firefox, this is ",(0,t.jsx)(s.code,{children:"scrollbar-width: thin"}),". Chrome is hard coded to ",(0,t.jsx)(s.code,{children:"8px"})," for consistency."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)("span",{className:"whitespace-nowrap",children:(0,t.jsx)(s.code,{children:"scrollbar-none"})})}),(0,t.jsx)(s.td,{children:"Hides the scrollbar completely"}),(0,t.jsxs)(s.td,{children:["Because of browser quirks, this cannot be used to hide an existing styled scrollbar - i.e. ",(0,t.jsx)(s.code,{children:"scrollbar hover:scrollbar-none"})," will not work."]})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"colour-utilities",children:"Colour utilities"}),"\n",(0,t.jsxs)(s.p,{children:["All of the asterisks can be replaced ",(0,t.jsx)(s.a,{href:"https://tailwindcss.com/docs/customizing-colors#using-custom-colors",children:"with any tailwind colour"}),", including ",(0,t.jsx)(s.a,{href:"https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values",children:"arbitrary values"})," and ",(0,t.jsx)(s.a,{href:"https://tailwindcss.com/docs/background-color#changing-the-opacity",children:"opacity modifiers"}),". With the exception of the width utilities, all utilities are inherited by child elements."]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Utility"}),(0,t.jsx)(s.th,{children:"Effect"}),(0,t.jsx)(s.th,{children:"Notes"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)("span",{className:"whitespace-nowrap",children:(0,t.jsx)(s.code,{children:"scrollbar-thumb-*"})})}),(0,t.jsx)(s.td,{children:"Sets the colour of the scrollbar thumb"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)("span",{className:"whitespace-nowrap",children:(0,t.jsx)(s.code,{children:"scrollbar-track-*"})})}),(0,t.jsx)(s.td,{children:"Sets the colour of the scrollbar track"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)("span",{className:"whitespace-nowrap",children:(0,t.jsx)(s.code,{children:"scrollbar-corner-*"})})}),(0,t.jsx)(s.td,{children:"Sets the colour of the scrollbar corner"}),(0,t.jsx)(s.td,{children:"The corner will only appear if you have both vertical and horizontal scrollbars."})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"nocompatible-utilities",children:"Nocompatible utilities"}),"\n",(0,t.jsxs)(s.p,{children:["These styles are only available in ",(0,t.jsxs)(s.a,{href:"/getting-started#configuration",children:[(0,t.jsx)(s.code,{children:"nocompatible"})," mode"]}),". They won't have any effect on standards-track scrollbars, such as those used by Firefox or by Chrome/Edge by default."]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Utility"}),(0,t.jsx)(s.th,{children:"Effect"}),(0,t.jsx)(s.th,{children:"Notes"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)("span",{className:"whitespace-nowrap",children:(0,t.jsx)(s.code,{children:"scrollbar-w-*"})})}),(0,t.jsx)(s.td,{children:"Sets the width of vertical scrollbars"}),(0,t.jsxs)(s.td,{children:["The asterisk can be replaced with any Tailwind ",(0,t.jsx)(s.a,{href:"https://tailwindcss.com/docs/width",children:"width setting"}),", including arbitrary values. Only applies to scrollbars styled with ",(0,t.jsx)(s.code,{children:"scrollbar"})," (not ",(0,t.jsx)(s.code,{children:"scrollbar-thin"}),")."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)("span",{className:"whitespace-nowrap",children:(0,t.jsx)(s.code,{children:"scrollbar-h-*"})})}),(0,t.jsx)(s.td,{children:"Sets the height of horizontal scrollbars"}),(0,t.jsxs)(s.td,{children:["The asterisk can be replaced with any Tailwind ",(0,t.jsx)(s.a,{href:"https://tailwindcss.com/docs/height",children:"height setting"}),", including arbitrary values. Only applies to scrollbars styled with ",(0,t.jsx)(s.code,{children:"scrollbar"})," (not ",(0,t.jsx)(s.code,{children:"scrollbar-thin"}),")."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)("span",{className:"whitespace-nowrap",children:(0,t.jsx)(s.code,{children:"scrollbar-thumb-rounded-*"})})}),(0,t.jsx)(s.td,{children:"Rounds a scrollbar thumb's corners"}),(0,t.jsxs)(s.td,{children:["The asterisk can be replaced with any Tailwind ",(0,t.jsx)(s.a,{href:"https://tailwindcss.com/docs/border-radius#using-custom-values",children:"rounded setting"}),", including arbitrary values."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)("span",{className:"whitespace-nowrap",children:(0,t.jsx)(s.code,{children:"scrollbar-track-rounded-*"})})}),(0,t.jsx)(s.td,{children:"Rounds a scrollbar track's corners"}),(0,t.jsx)(s.td,{children:"See above, but for the track"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)("span",{className:"whitespace-nowrap",children:(0,t.jsx)(s.code,{children:"scrollbar-corner-rounded-*"})})}),(0,t.jsx)(s.td,{children:"Rounds a scrollbar corner's corners"}),(0,t.jsx)(s.td,{children:"See above, but for the corner pseudoelement created when both horizontal and vertial scrollbars are present"})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"variants",children:"Variants"}),"\n",(0,t.jsx)(s.admonition,{type:"warning",children:(0,t.jsxs)(s.p,{children:["These variants are not available in ",(0,t.jsx)(s.code,{children:"tailwind-scrollbar"}),"@v3. Use the built-in ",(0,t.jsx)(s.code,{children:"hover:"})," and ",(0,t.jsx)(s.code,{children:"active:"})," instead."]})}),"\n",(0,t.jsx)(s.p,{children:"These variants don't have any effect on standards-track scrollbars, such as those used by Firefox or by Chrome/Edge by default. The responsibility of styling hover and active states is assumed by the browser in that scenario."}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Variant"}),(0,t.jsx)(s.th,{children:"Effect"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"scrollbar-hover:"})}),(0,t.jsx)(s.td,{children:"Applies a utility when the scrollbar's thumb is hovered"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"scrollbar-active:"})}),(0,t.jsx)(s.td,{children:"Applies a utility when the scrollbar's thumb is active"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"scrollbar-track-hover:"})}),(0,t.jsx)(s.td,{children:"Applies a utility when the scrollbar's track is hovered"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"scrollbar-track-active:"})}),(0,t.jsx)(s.td,{children:"Applies a utility when the scrollbar's track is active"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"scrollbar-corner-hover:"})}),(0,t.jsx)(s.td,{children:"Applies a utility when the scrollbar's corner is hovered"})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>n,x:()=>c});var r=i(6540);const t={},l=r.createContext(t);function n(e){const s=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),r.createElement(l.Provider,{value:s},e.children)}}}]);