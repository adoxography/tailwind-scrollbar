"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[976],{2053:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"intro","title":"Introduction","description":"tailwind-scrollbar is a plugin for Tailwind CSS that adds styling utilities for scrollbars with cross-browser support.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/","permalink":"/tailwind-scrollbar/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"slug":"/","sidebar_position":1},"sidebar":"docs","next":{"title":"Migrating to v4","permalink":"/tailwind-scrollbar/migrating"}}');var s=i(4848),n=i(8453);const o={slug:"/",sidebar_position:1},l="Introduction",a={},c=[{value:"Motivation",id:"motivation",level:2},{value:"What this plugin isn&#39;t",id:"what-this-plugin-isnt",level:3},{value:"A scrollbar triggering tool",id:"a-scrollbar-triggering-tool",level:4},{value:"A fully custom scrollbar",id:"a-fully-custom-scrollbar",level:4},{value:"Perfect cross-browser replication",id:"perfect-cross-browser-replication",level:4},{value:"License",id:"license",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"tailwind-scrollbar"})," is a plugin for ",(0,s.jsx)(t.a,{href:"https://tailwindcss.com",children:"Tailwind CSS"})," that adds styling utilities for scrollbars with cross-browser support."]}),"\n",(0,s.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,s.jsxs)(t.p,{children:["There are currently two competing standards for styling scrollbars amongst browsers: the ",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-width",children:"scrollbar-width"})," and ",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-color",children:"scrollbar-color"})," properties used by Firefox and newer Chromium-based browsers, and the ",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-scrollbar",children:"::-webkit-scrollbar"})," family of pseudoelements used by everything else. This plugin defines a single API for configuring both standards at once from within Tailwind."]}),"\n",(0,s.jsx)(t.h3,{id:"what-this-plugin-isnt",children:"What this plugin isn't"}),"\n",(0,s.jsx)(t.h4,{id:"a-scrollbar-triggering-tool",children:"A scrollbar triggering tool"}),"\n",(0,s.jsxs)(t.p,{children:["This plugin ",(0,s.jsx)(t.em,{children:"styles"})," scrollbars; it does not force them to appear. Use typical CSS techniques to get the scrollbar in place (e.g. the ",(0,s.jsx)(t.code,{children:"overflow-*"})," family of utilities), and then use the utilities in this plugin to style it from there."]}),"\n",(0,s.jsx)(t.h4,{id:"a-fully-custom-scrollbar",children:"A fully custom scrollbar"}),"\n",(0,s.jsx)(t.p,{children:"This plugin is intented to unify existing browser APIs; it's not meant to create fully custom scrollbar elements. As such, it is limited to some extent in terms of what kinds of scrollbars it can create."}),"\n",(0,s.jsx)(t.h4,{id:"perfect-cross-browser-replication",children:"Perfect cross-browser replication"}),"\n",(0,s.jsx)(t.p,{children:"Scrollbars in different browsers and operating systems look different and have different degrees of customizability. This plugin won't make them look exactly the same; it will just help you ensure that they don't clash with your site's theme."}),"\n",(0,s.jsx)(t.h2,{id:"license",children:"License"}),"\n",(0,s.jsxs)(t.p,{children:["This project is licensed under the ",(0,s.jsx)(t.a,{href:"https://github.com/adoxography/tailwind-scrollbar/blob/main/LICENSE",children:"MIT License"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>l});var r=i(6540);const s={},n=r.createContext(s);function o(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);